#include <REGX52.H>
#include <Intrins.h>
 
//LED灯引脚，沿逆时针定义
sbit LED1=P0^0;  sbit LED2=P0^1;  sbit LED3=P0^2;  sbit LED4=P0^3;  sbit LED5=P0^4;  sbit LED6=P0^5;  sbit LED7=P0^6;  sbit LED8=P0^7;
sbit LED24=P2^7; sbit LED23=P2^6; sbit LED22=P2^5; sbit LED21=P2^4; sbit LED20=P2^3; sbit LED19=P2^2; sbit LED18=P2^1;
sbit LED17=P2^0; sbit LED30=P3^7; sbit LED29=P3^6; sbit LED28=P3^5; sbit LED27=P3^4; sbit LED26=P3^3; sbit LED25=P3^2;
sbit LED16=P1^7; sbit LED15=P1^6; sbit LED14=P1^5; sbit LED13=P1^4; sbit LED12=P1^3; sbit LED11=P1^2; sbit LED10=P1^1; sbit LED9=P1^0;
 
int time = 0; 	//控制呼吸灯亮灯时间
int	mode = 0;  	//呼吸灯模式（渐亮或渐暗）
int i, j;  		//循环变量
 
//10us延时函数
void Delay(int us)		//@12.000MHz
{
	while(us--)
	{
		unsigned char i;
 
		_nop_();
		i = 2;
		while (--i);
	}
}
 
//全开
void turn_on(void)
{
	LED9=1;  LED10=1; LED11=1; LED12=1; LED13=1; LED14=1; LED15=1; LED16=1;
	LED25=1; LED26=1; LED27=1; LED28=1; LED29=1; LED30=1;
	LED17=1; LED18=1; LED19=1; LED20=1; LED21=1; LED22=1; LED23=1; LED24=1;
	LED8=1;  LED7=1;  LED6=1;  LED5=1;  LED4=1;  LED3=1;  LED2=1;  LED1=1;
}
 
//全关
void turn_off(void)
{
	LED9=0;  LED10=0; LED11=0; LED12=0; LED13=0; LED14=0; LED15=0; LED16=0;
	LED25=0; LED26=0; LED27=0; LED28=0; LED29=0; LED30=0;
	LED17=0; LED18=0; LED19=0; LED20=0; LED21=0; LED22=0; LED23=0; LED24=0;
	LED8=0;  LED7=0;  LED6=0;  LED5=0;  LED4=0;  LED3=0;  LED2=0;  LED1=0;
}
 
//流水灯
void run_LED(void)
{
	//顺时针流水灯
	for(i = 0; i < 2; i++)
	{
		LED9=1;		Delay(2000);
		LED10=1;	Delay(2000);
		LED11=1;	Delay(2000);
		LED12=1;	Delay(2000);
		LED13=1;	Delay(2000);
		LED14=1;	Delay(2000);
		LED15=1;	Delay(2000);
		LED16=1;	Delay(2000);
		LED25=1;	Delay(2000);
		LED26=1;	Delay(2000);
		LED27=1;	Delay(2000);
		LED28=1;	Delay(2000);
		LED29=1;	Delay(2000);
		LED30=1;	Delay(2000);
		LED17=1;	Delay(2000);
		LED18=1;	Delay(2000);
		LED19=1;	Delay(2000);
		LED20=1;	Delay(2000);
		LED21=1;	Delay(2000);
		LED22=1;	Delay(2000);
			LED6=1;		Delay(2000);
		LED5=1;		Delay(2000);
		LED4=1;		Delay(2000);
		LED3=1;		Delay(2000);
		LED2=1;		Delay(2000);
		LED1=1;		Delay(2000);
		
		LED9=0;		Delay(2000);
		LED10=0;	Delay(2000);
		LED11=0;	Delay(2000);
		LED12=0;	Delay(2000);
		LED13=0;	Delay(2000);
		LED14=0;	Delay(2000);
		LED15=0;	Delay(2000);
		LED16=0;	Delay(2000);
		LED25=0;	Delay(2000);
		LED26=0;	Delay(2000);
		LED27=0;	Delay(2000);
		LED28=0;	Delay(2000);
		LED29=0;	Delay(2000);
		LED30=0;	Delay(2000);
		LED17=0;	Delay(2000);
		LED18=0;	Delay(2000);
		LED19=0;	Delay(2000);
		LED20=0;	Delay(2000);
		LED21=0;	Delay(2000);
		LED22=0;	Delay(2000);
		LED23=0;	Delay(2000);
		LED24=0;	Delay(2000);
		LED8=0;		Delay(2000);
		LED7=0;		Delay(2000);
		LED6=0;		Delay(2000);
		LED5=0;		Delay(2000);
		LED4=0;		Delay(2000);
		LED3=0;		Delay(2000);
		LED2=0;		Delay(2000);
		LED1=0;		Delay(2000);
	}	LED23=1;	      Delay(2000);
		LED24=1;	      Delay(2000);
		LED8=1;		Delay(2000);
		LED7=1;		Delay(2000);
	
	//逆时针流水灯
	for(i = 0; i < 2; i++)
	{
		LED1=1;		Delay(2000);
		LED2=1;		Delay(2000);
		LED3=1;		Delay(2000);
		LED4=1;		Delay(2000);
		LED5=1;		Delay(2000);
		LED6=1;		Delay(2000);
		LED7=1;		Delay(2000);
		LED8=1;		Delay(2000);
		LED24=1;	Delay(2000);
		LED23=1;	Delay(2000);
		LED22=1;	Delay(2000);
		LED21=1;	Delay(2000);
		LED20=1;	Delay(2000);
		LED19=1;	Delay(2000);
		LED18=1;	Delay(2000);
		LED17=1;	Delay(2000);
		LED30=1;	Delay(2000);
		LED29=1;	Delay(2000);
		LED28=1;	Delay(2000);
		LED27=1;	Delay(2000);
		LED26=1;	Delay(2000);
		LED25=1;	Delay(2000);
		LED16=1;	Delay(2000);
		LED15=1;	Delay(2000);
		LED14=1;	Delay(2000);
		LED13=1;	Delay(2000);
		LED12=1;	Delay(2000);
		LED11=1;	Delay(2000);
		LED10=1;	Delay(2000);
		LED9=1;		Delay(2000);
 
		LED1=0;		Delay(2000);
		LED2=0;		Delay(2000);
		LED3=0;		Delay(2000);
		LED4=0;		Delay(2000);
		LED5=0;		Delay(2000);
		LED6=0;		Delay(2000);
		LED7=0;		Delay(2000);
		LED8=0;		Delay(2000);
		LED24=0;	Delay(2000);
		LED23=0;	Delay(2000);
		LED22=0;	Delay(2000);
		LED21=0;	Delay(2000);
		LED20=0;	Delay(2000);
		LED19=0;	Delay(2000);
		LED18=0;	Delay(2000);
		LED17=0;	Delay(2000);
		LED30=0;	Delay(2000);
		LED29=0;	Delay(2000);
		LED28=0;	Delay(2000);
		LED27=0;	Delay(2000);
		LED26=0;	Delay(2000);
		LED25=0;	Delay(2000);
		LED16=0;	Delay(2000);
		LED15=0;	Delay(2000);
		LED14=0;	Delay(2000);
		LED13=0;	Delay(2000);
		LED12=0;	Delay(2000);
		LED11=0;	Delay(2000);
		LED10=0;	Delay(2000);
		LED9=0;		Delay(2000);
	}
}
 
void run_LED_2(void)
{
	//顺时针流水灯
	for(i = 0; i < 3; i++)
	{
		LED9=1;		Delay(2000);
		LED10=1;	Delay(2000);
		LED11=1;	Delay(2000);
		LED12=1;	Delay(2000);
		LED13=1;	Delay(2000);
		LED14=1;	Delay(2000);
		LED15=1;	Delay(2000);
		LED16=1;	Delay(2000);
		LED25=1;	Delay(2000);
		LED26=1;	Delay(2000);
		LED27=1;	Delay(2000);
		LED28=1;	Delay(2000);
		LED29=1;	Delay(2000);
		LED30=1;	Delay(2000);
		LED17=1;	Delay(2000);
		LED18=1;	Delay(2000);
		LED19=1;	Delay(2000);
		LED20=1;	Delay(2000);
		LED21=1;	Delay(2000);
		LED22=1;	Delay(2000);
		LED23=1;	Delay(2000);
		LED24=1;	Delay(2000);
		LED8=1;		Delay(2000);
		LED7=1;		Delay(2000);
		LED6=1;		Delay(2000);
		LED5=1;		Delay(2000);
		LED4=1;		Delay(2000);
		LED3=1;		Delay(2000);
		LED2=1;		Delay(2000);
		LED1=1;		Delay(2000);
		
		LED9=0;		Delay(2000);
		LED10=0;	Delay(2000);
		LED11=0;	Delay(2000);
		LED12=0;	Delay(2000);
		LED13=0;	Delay(2000);
		LED14=0;	Delay(2000);
		LED15=0;	Delay(2000);
		LED16=0;	Delay(2000);
		LED25=0;	Delay(2000);
		LED26=0;	Delay(2000);
		LED27=0;	Delay(2000);
		LED28=0;	Delay(2000);
		LED29=0;	Delay(2000);
		LED30=0;	Delay(2000);
		LED17=0;	Delay(2000);
		LED18=0;	Delay(2000);
		LED19=0;	Delay(2000);
		LED20=0;	Delay(2000);
		LED21=0;	Delay(2000);
		LED22=0;	Delay(2000);
		LED23=0;	Delay(2000);
		LED24=0;	Delay(2000);
		LED8=0;		Delay(2000);
		LED7=0;		Delay(2000);
		LED6=0;		Delay(2000);
		LED5=0;		Delay(2000);
		LED4=0;		Delay(2000);
		LED3=0;		Delay(2000);
		LED2=0;		Delay(2000);
		LED1=0;		Delay(2000);
		
		//逆时针流水灯
		LED1=1;		Delay(2000);
		LED2=1;		Delay(2000);
		LED3=1;		Delay(2000);
		LED4=1;		Delay(2000);
		LED5=1;		Delay(2000);
		LED6=1;		Delay(2000);
		LED7=1;		Delay(2000);
		LED8=1;		Delay(2000);
		LED24=1;	Delay(2000);
		LED23=1;	Delay(2000);
		LED22=1;	Delay(2000);
		LED21=1;	Delay(2000);
		LED20=1;	Delay(2000);
		LED19=1;	Delay(2000);
		LED18=1;	Delay(2000);
		LED17=1;	Delay(2000);
		LED30=1;	Delay(2000);
		LED29=1;	Delay(2000);
		LED28=1;	Delay(2000);
		LED27=1;	Delay(2000);
		LED26=1;	Delay(2000);
		LED25=1;	Delay(2000);
		LED16=1;	Delay(2000);
		LED15=1;	Delay(2000);
		LED14=1;	Delay(2000);
		LED13=1;	Delay(2000);
		LED12=1;	Delay(2000);
		LED11=1;	Delay(2000);
		LED10=1;	Delay(2000);
		LED9=1;		Delay(2000);
 
		LED1=0;		Delay(2000);
		LED2=0;		Delay(2000);
		LED3=0;		Delay(2000);
		LED4=0;		Delay(2000);
		LED5=0;		Delay(2000);
		LED6=0;		Delay(2000);
		LED7=0;		Delay(2000);
		LED8=0;		Delay(2000);
		LED24=0;	Delay(2000);
		LED23=0;	Delay(2000);
		LED22=0;	Delay(2000);
		LED21=0;	Delay(2000);
		LED20=0;	Delay(2000);
		LED19=0;	Delay(2000);
		LED18=0;	Delay(2000);
		LED17=0;	Delay(2000);
		LED30=0;	Delay(2000);
		LED29=0;	Delay(2000);
		LED28=0;	Delay(2000);
		LED27=0;	Delay(2000);
		LED26=0;	Delay(2000);
		LED25=0;	Delay(2000);
		LED16=0;	Delay(2000);
		LED15=0;	Delay(2000);
		LED14=0;	Delay(2000);
		LED13=0;	Delay(2000);
		LED12=0;	Delay(2000);
		LED11=0;	Delay(2000);
		LED10=0;	Delay(2000);
		LED9=0;		Delay(2000);
	}
}
 
 
//呼吸灯部分
void breathe_LED(void)
{
	for(i = 0; i < 500; i++)
	{
		//全开
		turn_on();
		Delay(15 * time);
		//全关
		turn_off();
		Delay(15 * (50 - time));
		
		if(mode == 0)	
			time++;
		else if(mode == 1)
			time--;
		
		if(time >= 50 || time <= 0)
		{
			mode++;
			mode %= 2;
		}
	}
}
 
//上下往返
void fall_rise_LED(void)
{
	for(i = 0; i < 2; i++)
	{
		//初始时全关闭
		turn_off();
		Delay(10000);
		//从上至下
		LED9=1;  LED1=1;	Delay(2000);
		LED10=1; LED2=1;	Delay(2000);
		LED11=1; LED3=1;	Delay(2000);
		LED12=1; LED4=1;	Delay(2000);
		LED13=1; LED5=1;	Delay(2000);
		LED14=1; LED6=1;	Delay(2000);
		LED15=1; LED7=1;	Delay(2000);
		LED16=1; LED8=1;	Delay(2000);
		LED25=1; LED24=1;	Delay(2000);
		LED26=1; LED23=1;	Delay(2000);
		LED27=1; LED22=1;	Delay(2000);
		LED28=1; LED21=1;	Delay(2000);
		LED29=1; LED20=1;	Delay(2000);
		LED30=1; LED19=1;	Delay(2000);
		LED17=1; LED18=1;	Delay(2000);
		//闪烁两次
		for(j = 0; j < 2; j++)
		{
			//全关
			turn_off();
			Delay(10000);
			//全开
			turn_on();
			Delay(10000);
		}
		//全关
		turn_off();
		//从下至上
		LED17=1; LED18=1;	Delay(2000);
		LED30=1; LED19=1;	Delay(2000);
		LED29=1; LED20=1;	Delay(2000);
		LED28=1; LED21=1;	Delay(2000);
		LED27=1; LED22=1;	Delay(2000);
		LED26=1; LED23=1;	Delay(2000);
		LED25=1; LED24=1;	Delay(2000);
		LED16=1; LED8=1;	Delay(2000);
		LED15=1; LED7=1;	Delay(2000);
		LED14=1; LED6=1;	Delay(2000);
		LED13=1; LED5=1;	Delay(2000);
		LED12=1; LED4=1;	Delay(2000);
		LED11=1; LED3=1;	Delay(2000);
		LED10=1; LED2=1;	Delay(2000);
		LED9=1;  LED1=1;	Delay(2000);
		for(j = 0; j < 2; j++)
		{
			//全关
			turn_off();
			Delay(10000);
			//全开
			turn_on();
			Delay(10000);
		}
	}
}
 
//满天星
void star_LED(void)
{
	for(i = 0; i < 15; i++)
	{
		//正
		LED9=1;  LED10=0; LED11=1; LED12=0; LED13=1; LED14=0; LED15=1; LED16=0;
		LED25=1; LED26=0; LED27=1; LED28=0; LED29=1; LED30=0;
		LED17=1; LED18=0; LED19=1; LED20=0; LED21=1; LED22=0; LED23=1; LED24=0;
		LED8=1;  LED7=0;  LED6=1;  LED5=0;  LED4=1;  LED3=0;  LED2=1;  LED1=0;
		Delay(6000);
		//反
		LED9=0;  LED10=1; LED11=0; LED12=1; LED13=0; LED14=1; LED15=0; LED16=1;
		LED25=0; LED26=1; LED27=0; LED28=1; LED29=0; LED30=1;
		LED17=0; LED18=1; LED19=0; LED20=1; LED21=0; LED22=1; LED23=0; LED24=1;
		LED8=0;  LED7=1;  LED6=0;  LED5=1;  LED4=0;  LED3=1;  LED2=0;  LED1=1;
		Delay(6000);
	}
}
 
//双线环绕
void chase_LED(void)
{
	LED9=0;	 LED18=0;	Delay(2000);
	LED10=0; LED19=0;	Delay(2000);
	LED11=0; LED20=0;	Delay(2000);
	LED12=0; LED21=0;	Delay(2000);
	LED13=0; LED22=0;	Delay(2000);
	LED14=0; LED23=0;	Delay(2000);
	LED15=0; LED24=0;	Delay(2000);
	LED16=0; LED8=0;	Delay(2000);
	LED25=0; LED7=0;	Delay(2000);
	LED26=0; LED6=0;	Delay(2000);
	LED27=0; LED5=0;	Delay(2000);
	LED28=0; LED4=0;	Delay(2000);
	LED29=0; LED3=0;	Delay(2000);
	LED30=0; LED2=0;	Delay(2000);
	LED17=0; LED1=0;	Delay(2000);
	
	LED9=1;	 LED18=1;	Delay(2000);
	LED10=1; LED19=1;	Delay(2000);
	LED11=1; LED20=1;	Delay(2000);
	LED12=1; LED21=1;	Delay(2000);
	LED13=1; LED22=1;	Delay(2000);
	LED14=1; LED23=1;	Delay(2000);
	LED15=1; LED24=1;	Delay(2000);
	LED16=1; LED8=1;	Delay(2000);
	LED25=1; LED7=1;	Delay(2000);
	LED26=1; LED6=1;	Delay(2000);
	LED27=1; LED5=1;	Delay(2000);
	LED28=1; LED4=1;	Delay(2000);
	LED29=1; LED3=1;	Delay(2000);
	LED30=1; LED2=1;	Delay(2000);
	LED17=1; LED1=1;	Delay(2000);
	
	Delay(12000);
}
 
//双线环绕反向
void chase_LED_reverse(void)
{
	LED17=0; LED1=0;	Delay(2000);
	LED30=0; LED2=0;	Delay(2000);
	LED29=0; LED3=0;	Delay(2000);
	LED28=0; LED4=0;	Delay(2000);
	LED27=0; LED5=0;	Delay(2000);
	LED26=0; LED6=0;	Delay(2000);
	LED25=0; LED7=0;	Delay(2000);
	LED16=0; LED8=0;	Delay(2000);
	LED15=0; LED24=0;	Delay(2000);
	LED14=0; LED23=0;	Delay(2000);
	LED13=0; LED22=0;	Delay(2000);
	LED12=0; LED21=0;	Delay(2000);
	LED11=0; LED20=0;	Delay(2000);
	LED10=0; LED19=0;	Delay(2000);
	LED9=0;	 LED18=0;	Delay(2000);
	
	LED17=1; LED1=1;	Delay(2000);
	LED30=1; LED2=1;	Delay(2000);
	LED29=1; LED3=1;	Delay(2000);
	LED28=1; LED4=1;	Delay(2000);
	LED27=1; LED5=1;	Delay(2000);
	LED26=1; LED6=1;	Delay(2000);
	LED25=1; LED7=1;	Delay(2000);
	LED16=1; LED8=1;	Delay(2000);
	LED15=1; LED24=1;	Delay(2000);
	LED14=1; LED23=1;	Delay(2000);
	LED13=1; LED22=1;	Delay(2000);
	LED12=1; LED21=1;	Delay(2000);
	LED11=1; LED20=1;	Delay(2000);
	LED10=1; LED19=1;	Delay(2000);
	LED9=1;	 LED18=1;	Delay(2000);
	
	Delay(12000);
}
 
//双线环绕往返
void chase_LED_back(void)
{
	LED17=0; LED1=0;	Delay(2000);
	LED30=0; LED2=0;	Delay(2000);
	LED29=0; LED3=0;	Delay(2000);
	LED28=0; LED4=0;	Delay(2000);
	LED27=0; LED5=0;	Delay(2000);
	LED26=0; LED6=0;	Delay(2000);
	LED25=0; LED7=0;	Delay(2000);
	LED16=0; LED8=0;	Delay(2000);
	LED15=0; LED24=0;	Delay(2000);
	LED14=0; LED23=0;	Delay(2000);
	LED13=0; LED22=0;	Delay(2000);
	LED12=0; LED21=0;	Delay(2000);
	LED11=0; LED20=0;	Delay(2000);
	LED10=0; LED19=0;	Delay(2000);
	LED9=0;	 LED18=0;	Delay(2000);
	
	LED9=1;	 LED18=1;	Delay(2000);
	LED10=1; LED19=1;	Delay(2000);
	LED11=1; LED20=1;	Delay(2000);
	LED12=1; LED21=1;	Delay(2000);
	LED13=1; LED22=1;	Delay(2000);
	LED14=1; LED23=1;	Delay(2000);
	LED15=1; LED24=1;	Delay(2000);
	LED16=1; LED8=1;	Delay(2000);
	LED25=1; LED7=1;	Delay(2000);
	LED26=1; LED6=1;	Delay(2000);
	LED27=1; LED5=1;	Delay(2000);
	LED28=1; LED4=1;	Delay(2000);
	LED29=1; LED3=1;	Delay(2000);
	LED30=1; LED2=1;	Delay(2000);
	LED17=1; LED1=1;	Delay(2000);
	
	Delay(12000);
}
 
//双线环绕往返反向
void chase_LED_back_reverse(void)
{
	LED9=0;	 LED18=0;	Delay(2000);
	LED10=0; LED19=0;	Delay(2000);
	LED11=0; LED20=0;	Delay(2000);
	LED12=0; LED21=0;	Delay(2000);
	LED13=0; LED22=0;	Delay(2000);
	LED14=0; LED23=0;	Delay(2000);
	LED15=0; LED24=0;	Delay(2000);
	LED16=0; LED8=0;	Delay(2000);
	LED25=0; LED7=0;	Delay(2000);
	LED26=0; LED6=0;	Delay(2000);
	LED27=0; LED5=0;	Delay(2000);
	LED28=0; LED4=0;	Delay(2000);
	LED29=0; LED3=0;	Delay(2000);
	LED30=0; LED2=0;	Delay(2000);
	LED17=0; LED1=0;	Delay(2000);
	
	LED17=1; LED1=1;	Delay(2000);
	LED30=1; LED2=1;	Delay(2000);
	LED29=1; LED3=1;	Delay(2000);
	LED28=1; LED4=1;	Delay(2000);
	LED27=1; LED5=1;	Delay(2000);
	LED26=1; LED6=1;	Delay(2000);
	LED25=1; LED7=1;	Delay(2000);
	LED16=1; LED8=1;	Delay(2000);
	LED15=1; LED24=1;	Delay(2000);
	LED14=1; LED23=1;	Delay(2000);
	LED13=1; LED22=1;	Delay(2000);
	LED12=1; LED21=1;	Delay(2000);
	LED11=1; LED20=1;	Delay(2000);
	LED10=1; LED19=1;	Delay(2000);
	LED9=1;	 LED18=1;	Delay(2000);
	
	Delay(12000);
}
 
//延时控制变量
int one_time = 2000;
 
//单灯绕圈
void one_LED(void)
{	
	if(one_time > 10)
	{
		LED9=1;	 LED1=0;	Delay(one_time);
		LED10=1; LED9=0;	Delay(one_time);
		LED11=1; LED10=0;	Delay(one_time);
		LED12=1; LED11=0;	Delay(one_time);
		LED13=1; LED12=0;	Delay(one_time);
		LED14=1; LED13=0; 	Delay(one_time);
		LED15=1; LED14=0;	Delay(one_time);
		LED16=1; LED15=0;	Delay(one_time);
		LED25=1; LED16=0;	Delay(one_time);
		LED26=1; LED25=0;	Delay(one_time);
		LED27=1; LED26=0;	Delay(one_time);
		LED28=1; LED27=0;	Delay(one_time);
		LED29=1; LED28=0;	Delay(one_time);
		LED30=1; LED29=0;	Delay(one_time);
		LED17=1; LED30=0;	Delay(one_time);
		LED18=1; LED17=0;	Delay(one_time);
		LED19=1; LED18=0; 	Delay(one_time);
		LED20=1; LED19=0;	Delay(one_time);
		LED21=1; LED20=0; 	Delay(one_time);
		LED22=1; LED21=0; 	Delay(one_time);
		LED23=1; LED22=0;	Delay(one_time);
		LED24=1; LED23=0;	Delay(one_time);
		LED8=1;	 LED24=0;	Delay(one_time);
		LED7=1;	 LED8=0;	Delay(one_time);
		LED6=1;	 LED7=0; 	Delay(one_time);
		LED5=1;	 LED6=0;	Delay(one_time);
		LED4=1;	 LED5=0;	Delay(one_time);
		LED3=1;	 LED4=0;	Delay(one_time);
		LED2=1;	 LED3=0;	Delay(one_time);
		LED1=1;	 LED2=0;	Delay(one_time);
	}
	else
	{
		for(i = 1; i <= 29; i++)
		{
			//全开
			turn_on();
			Delay(i);
			//全关
			turn_off();
			Delay(29 - i);
		}
	}
	
	//当延时时间高于10*10us时
	if(one_time > 100)
	{
		one_time -= 100;  //延时每圈减100
	}
	//当延时时间位于10~100之间时
	else if(one_time > 10 && one_time <= 100)
	{
		one_time -= 2;  //延时每圈减2
	}
	//当延时时间在10及10以下时
	else
	{
		one_time = 10;  //延时保持在10
	}
}
 
//竖向变换
void vertical_LED(void)
{
	//依次亮起五个灯
	LED9=1;  LED1=1;  LED27=0; LED22=0;	Delay(5000);
	LED10=1; LED2=1;  LED28=0; LED21=0;	Delay(5000);
	LED11=1; LED3=1;  LED29=0; LED20=0;	Delay(5000);
	LED12=1; LED4=1;  LED30=0; LED19=0;	Delay(5000);
	LED13=1; LED5=1;  LED17=0; LED18=0;	Delay(5000);
	LED14=1; LED6=1;  LED9=0;  LED1=0;	Delay(5000);
	LED15=1; LED7=1;  LED10=0; LED2=0;	Delay(5000);
	LED16=1; LED8=1;  LED11=0; LED3=0;	Delay(5000);
	LED25=1; LED24=1; LED12=0; LED4=0;	Delay(5000);
	LED26=1; LED23=1; LED13=0; LED5=0;	Delay(5000);
	LED27=1; LED22=1; LED14=0; LED6=0;	Delay(5000);
	LED28=1; LED21=1; LED15=0; LED7=0;	Delay(5000);
	LED29=1; LED20=1; LED16=0; LED8=0;	Delay(5000);
	LED30=1; LED19=1; LED25=0; LED24=0;	Delay(5000);
	LED17=1; LED18=1; LED26=0; LED23=0;	Delay(5000);
}
 
//横向亮灯
void transverse_LED(void)
{
	LED9=1;  LED1=1; LED17=1; LED18=1;	Delay(4000);
	LED10=1; LED2=1; LED30=1; LED19=1;	Delay(4000);
	LED11=1; LED3=1; LED29=1; LED20=1;	Delay(4000);
	LED12=1; LED4=1; LED28=1; LED21=1;	Delay(4000);
	LED13=1; LED5=1; LED27=1; LED22=1; 	Delay(4000);
	LED14=1; LED6=1; LED26=1; LED23=1;	Delay(4000);
	LED15=1; LED7=1; LED25=1; LED24=1;	Delay(4000);
	LED16=1; LED8=1;				  	Delay(4000);
	
	Delay(20000);
}
 
void main()
{
	//全关
	turn_off();
		
	while(1)
	{
		for(i = 0; i < 20; i++){
			//单灯循环
			one_LED();
		}
		
		//呼吸灯部分
		breathe_LED();
		turn_off();
		
		//流水灯部分
		run_LED();
		turn_off();
		
		run_LED_2();
		turn_off();
		
		//上下往返
		fall_rise_LED();
		turn_off();
		
		//满天星
		star_LED();
		turn_off();
 
		for(i = 0; i < 2; i++){
			//双线环绕正向
			chase_LED();
			//双线环绕反向
			chase_LED_reverse();
		}
		for(i = 0; i < 2; i++){
			//双线环绕往返正向
			chase_LED_back();
			//双线环绕往返反向
			chase_LED_back_reverse();
		}
		turn_off();
		
		for(i = 0; i < 4; i++){
			//竖向亮灯
			vertical_LED();
			turn_off();
		}
		for(i = 0; i < 4; i++){
			//横向亮灯
			transverse_LED();
			if(i < 3){  //第四次不关灯
				turn_off();
			}
		}
		
		for(i = 0; i < 3; i++)
		{
			//呼吸灯
			breathe_LED();
		}
		
		//将单灯循环延时变量恢复原值
		one_time = 2000;
	}
}
 